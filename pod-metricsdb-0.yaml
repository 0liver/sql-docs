apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-02-16T17:20:01Z"
  generateName: metricsdb-
  labels:
    MSSQL_CLUSTER: bdc-training-aks-cluster
    app: metricsdb
    controller-revision-hash: metricsdb-7dd9598fcb
    plane: control
    role: monitoring
    statefulset.kubernetes.io/pod-name: metricsdb-0
  name: metricsdb-0
  namespace: bdc-training-aks-cluster
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: metricsdb
    uid: 9029f85e-50e0-11ea-8c0a-d207bf257b44
  resourceVersion: "2856"
  selfLink: /api/v1/namespaces/bdc-training-aks-cluster/pods/metricsdb-0
  uid: 903460ff-50e0-11ea-8c0a-d207bf257b44
spec:
  containers:
  - env:
    - name: MSSQL_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: MSSQL_POD_TYPE
      value: metricsdb
    - name: MSSQL_CONTAINER_TYPE
      value: influxdb
    - name: MSSQL_POD_KIND
      value: StatefulSet
    - name: MSSQL_AGENT_GRPC_PORT
      value: "8300"
    - name: MSSQL_AGENT_HTTPS_PORT
      value: "8400"
    image: mcr.microsoft.com/mssql/bdc/mssql-monitor-influxdb:2019-CU1-ubuntu-16.04
    imagePullPolicy: Always
    name: influxdb
    ports:
    - containerPort: 8086
      name: influxdb-8086
      protocol: TCP
    - containerPort: 8300
      name: agent-grpc-8300
      protocol: TCP
    - containerPort: 8400
      name: agent-srv-8400
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/credentials/controller-internal
      name: controller-internal-secret
      readOnly: true
    - mountPath: /var/run/secrets/certificates/agent
      name: metricsdb-agent-secret
      readOnly: true
    - mountPath: /var/run/secrets/credentials/metricsdb-wo-secret
      name: metricsdb-wo-secret
      readOnly: true
    - mountPath: /var/opt
      name: data
      subPath: influxdb
    - mountPath: /var/log
      name: logs
      subPath: influxdb
    - mountPath: /var/run
      name: var-run
      subPath: influxdb
    - mountPath: /var/run/configmaps/cluster
      name: cluster-config-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-l8wl2
      readOnly: true
  dnsConfig:
    options:
    - name: timeout
      value: "30"
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: metricsdb-0
  imagePullSecrets:
  - name: mssql-private-registry
  nodeName: aks-nodepool1-73839776-vmss000004
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: metricsdb-svc
  terminationGracePeriodSeconds: 0
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-metricsdb-0
  - name: logs
    persistentVolumeClaim:
      claimName: logs-metricsdb-0
  - name: controller-internal-secret
    secret:
      defaultMode: 420
      secretName: controller-internal-secret
  - name: metricsdb-agent-secret
    secret:
      defaultMode: 420
      secretName: metricsdb-agent-secret
  - configMap:
      defaultMode: 420
      name: cluster-configmap
    name: cluster-config-volume
  - name: metricsdb-wo-secret
    secret:
      defaultMode: 420
      secretName: metricsdb-wo-secret
  - emptyDir:
      medium: Memory
    name: var-run
  - name: default-token-l8wl2
    secret:
      defaultMode: 420
      secretName: default-token-l8wl2
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-02-16T17:20:25Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-02-16T17:26:47Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-02-16T17:26:47Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-02-16T17:20:19Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://3ee043405b92015d22759be7070a1e283751024de0b1e0311f77e9f2ca728d53
    image: mcr.microsoft.com/mssql/bdc/mssql-monitor-influxdb:2019-CU1-ubuntu-16.04
    imageID: docker-pullable://mcr.microsoft.com/mssql/bdc/mssql-monitor-influxdb@sha256:f3c8c41b89b1a755b5cfb8622a34e28963082fab67d1c0cb98fa36bfca267ab2
    lastState: {}
    name: influxdb
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: "2020-02-16T17:26:47Z"
  hostIP: 10.240.0.8
  phase: Running
  podIP: 10.244.4.4
  qosClass: BestEffort
  startTime: "2020-02-16T17:20:25Z"
